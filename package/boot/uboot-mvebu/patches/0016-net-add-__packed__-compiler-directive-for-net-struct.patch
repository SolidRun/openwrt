From ad4e83ba51539d4e109eeeeb5d128fcb18ea0ac8 Mon Sep 17 00:00:00 2001
From: Rabeeh Khoury <rabeeh@solid-run.com>
Date: Wed, 8 Nov 2017 16:07:15 +0200
Subject: [PATCH 2/2] net: add __packed__ compiler directive for net
 structures

backport from upstream; gcc 7.x combines multiple writes into one where it
can generate data abort exceptions.

Signed-off-by: Rabeeh Khoury <rabeeh@solid-run.com>
---
 include/net.h |   14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/include/net.h b/include/net.h
index ed5259a..3b54365 100644
--- a/include/net.h
+++ b/include/net.h
@@ -312,7 +312,7 @@ struct ethernet_hdr {
	u8		et_dest[ARP_HLEN];	/* Destination node	*/
	u8		et_src[ARP_HLEN];	/* Source node		*/
	u16		et_protlen;		/* Protocol or length	*/
-};
+} __attribute__((packed));

 /* Ethernet header size */
 #define ETHER_HDR_SIZE	(sizeof(struct ethernet_hdr))
@@ -330,7 +330,7 @@ struct e802_hdr {
	u8		et_snap2;
	u8		et_snap3;
	u16		et_prot;		/* 802 protocol		*/
-};
+} __attribute__((packed));

 /* 802 + SNAP + ethernet header size */
 #define E802_HDR_SIZE	(sizeof(struct e802_hdr))
@@ -344,7 +344,7 @@ struct vlan_ethernet_hdr {
	u16		vet_vlan_type;		/* PROT_VLAN		*/
	u16		vet_tag;		/* TAG of VLAN		*/
	u16		vet_type;		/* protocol type	*/
-};
+} __attribute__((packed));

 /* VLAN Ethernet header size */
 #define VLAN_ETHER_HDR_SIZE	(sizeof(struct vlan_ethernet_hdr))
@@ -373,7 +373,7 @@ struct ip_hdr {
	u16		ip_sum;		/* checksum			*/
	struct in_addr	ip_src;		/* Source IP address		*/
	struct in_addr	ip_dst;		/* Destination IP address	*/
-};
+} __attribute__((packed));

 #define IP_OFFS		0x1fff /* ip offset *= 8 */
 #define IP_FLAGS	0xe000 /* first 3 bits */
@@ -401,7 +401,7 @@ struct ip_udp_hdr {
	u16		udp_dst;	/* UDP destination port		*/
	u16		udp_len;	/* Length of UDP packet		*/
	u16		udp_xsum;	/* Checksum			*/
-};
+} __attribute__((packed));

 #define IP_UDP_HDR_SIZE		(sizeof(struct ip_udp_hdr))
 #define UDP_HDR_SIZE		(IP_UDP_HDR_SIZE - IP_HDR_SIZE)
@@ -439,7 +439,7 @@ struct arp_hdr {
	u8		ar_tha[];	/* Target hardware address	*/
	u8		ar_tpa[];	/* Target protocol address	*/
 #endif /* 0 */
-};
+} __attribute__((packed));

 #define ARP_HDR_SIZE	(8+20)		/* Size assuming ethernet	*/

@@ -474,7 +474,7 @@ struct icmp_hdr {
		} frag;
		u8 data[0];
	} un;
-};
+} __attribute__((packed));

 #define ICMP_HDR_SIZE		(sizeof(struct icmp_hdr))
 #define IP_ICMP_HDR_SIZE	(IP_HDR_SIZE + ICMP_HDR_SIZE)
--
1.7.9.5
